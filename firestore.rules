
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAdmin() {
      let adminEmails = ['moneynivesh@gmail.com', 'moneynivesh360@gmail.com'];
      return request.auth.token.email in adminEmails;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can manage their own profile, admins can manage all.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // No delete for users, admin can delete.
      allow delete: if isAdmin();
    }
    
    match /userDetails/{userId} {
       allow read, update, create: if request.auth.uid == userId || isAdmin();
       allow delete: if isAdmin();
    }

    // Investments can be read by the owner or admin.
    // All writes must go through server-side logic.
    match /investments/{investmentId} {
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow write: if isAdmin();
    }

    // User can read their own balance, but cannot update it.
    // Balance updates are handled by server-side transactions only.
    match /userBalances/{userId} {
        allow read: if request.auth.uid == userId || isAdmin();
        allow create: if request.auth.uid == userId;
        allow update: if isAdmin(); // Admin can create but not directly update balance
    }

    // History is read-only for users.
    match /balanceHistory/{historyId} {
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow write: if isAdmin();
    }
    
    match /interestPayouts/{payoutId} {
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow write: if isAdmin();
    }

    // Users can create requests for themselves. Admins can manage all requests.
    match /investmentRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow delete: if isAdmin();
    }

    match /fdWithdrawalRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow delete: if isAdmin();
    }

    match /topupRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow delete: if isAdmin();
    }

    match /balanceWithdrawalRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow delete: if isAdmin();
    }
    
    match /maturedFdRequests/{requestId} {
        allow read, delete: if isAdmin();
    }
    
    match /templates/{templateId} {
        allow read, write: if isAdmin();
    }
    
    match /settings/{settingId} {
        allow read, write: if isAdmin();
    }
  }
}
