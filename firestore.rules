
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email in ['moneynivesh@gmail.com', 'moneynivesh360@gmail.com'];
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS collections: user can manage their own data, admin can manage all
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    match /userDetails/{userId} {
        allow read, create, update, delete: if request.auth.uid == userId || isAdmin();
    }

    // USER BALANCES: user can read own, admin can read all. Write is protected.
    match /userBalances/{userId} {
        allow read: if request.auth.uid == userId || isAdmin();
        allow create: if request.auth.uid == userId;
        // Balance field is only mutable by server-side transactions, not by client SDKs.
        allow update: if false;
    }

    // BALANCE HISTORY: user can read own, admin can read all.
    match /balanceHistory/{docId} {
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow create, update, delete: if isAdmin();
    }
    
    // INTEREST PAYOUTS: user can read own, admin can read all.
    match /interestPayouts/{docId} {
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow create, update, delete: if isAdmin();
    }

    // INVESTMENTS: user can read own, admin can manage all
    match /investments/{docId} {
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow create, update, delete: if isAdmin();
    }
    
    // REQUESTS: user can create and read their own. Admin can manage all.
    match /investmentRequests/{docId} {
        allow create: if request.resource.data.userId == request.auth.uid;
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow delete, update: if isAdmin();
    }
    match /fdWithdrawalRequests/{docId} {
        allow create: if request.resource.data.userId == request.auth.uid;
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow delete, update: if isAdmin();
    }
     match /maturedFdRequests/{docId} {
        allow create: if isAdmin();
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow delete, update: if isAdmin();
    }
    match /topupRequests/{docId} {
        allow create: if request.resource.data.userId == request.auth.uid;
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow delete, update: if isAdmin();
    }
    match /balanceWithdrawalRequests/{docId} {
        allow create: if request.resource.data.userId == request.auth.uid;
        allow read: if resource.data.userId == request.auth.uid || isAdmin();
        allow delete, update: if isAdmin();
    }

    // SETTINGS & TEMPLATES: readable by any authenticated user, writable only by admin
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /templates/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
